"use strict";function _createForOfIteratorHelper(e,t){var r,n,o,a,s="undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(s)return n=!(r=!0),{s:function(){s=s.call(e)},n:function(){var e=s.next();return r=e.done,e},e:function(e){n=!0,o=e},f:function(){try{r||null==s.return||s.return()}finally{if(n)throw o}}};if(Array.isArray(e)||(s=_unsupportedIterableToArray(e))||t&&e&&"number"==typeof e.length)return s&&(e=s),a=0,{s:t=function(){},n:function(){return a>=e.length?{done:!0}:{done:!1,value:e[a++]}},e:function(e){throw e},f:t};throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}function _unsupportedIterableToArray(e,t){var r;if(e)return"string"==typeof e?_arrayLikeToArray(e,t):"Map"===(r="Object"===(r=Object.prototype.toString.call(e).slice(8,-1))&&e.constructor?e.constructor.name:r)||"Set"===r?Array.from(e):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?_arrayLikeToArray(e,t):void 0}function _arrayLikeToArray(e,t){(null==t||t>e.length)&&(t=e.length);for(var r=0,n=new Array(t);r<t;r++)n[r]=e[r];return n}var burgerBtn=document.querySelector(".hamburger"),menuLinks=document.querySelectorAll(".nav__menu-link"),menuItems=document.querySelectorAll(".nav__menu-item"),moreInfoButtons=document.querySelectorAll(".card__info-btn"),aboutTextContainer=document.querySelector(".about__textbox"),aboutCardsContainer=document.querySelector(".about__cards"),projectsCards=document.querySelectorAll(".card"),socialIcons=document.querySelectorAll(".contact__social-icon"),options={rootMargin:"-25px"},toggleMenu=function(){var e=document.body.clientWidth,t=document.querySelector(".nav__menu");burgerBtn.classList.toggle("is-active"),t.classList.toggle("nav__menu--active"),menuLinks.forEach(function(e){e.classList.toggle("nav__menu-link--active")}),burgerBtn.classList.contains("is-active")&&e<=767?document.body.style.overflow="hidden":document.body.style.overflow="auto"},showHiddenText=(burgerBtn.addEventListener("click",toggleMenu),menuLinks.forEach(function(e){e.addEventListener("click",toggleMenu)}),function(e){var t=Number(e.target.dataset.index),r=document.querySelectorAll(".card__hidden");r[t].classList.toggle("show"),r[t].classList.contains("show")?e.target.textContent="Close info":e.target.textContent="More info"}),aboutTextAnimation=function(e){var t=document.querySelectorAll(".about__text--span");e[0].isIntersecting?t.forEach(function(e){e.classList.add("unblur")}):t.forEach(function(e){e.classList.remove("unblur")})},aboutCardsAnimation=function(e){var t=document.querySelectorAll(".about__card");e[0].isIntersecting?t.forEach(function(e){e.classList.add("big-icon")}):t.forEach(function(e){e.classList.remove("big-icon")})},projectsCardsAnimation=function(e){var t,r=_createForOfIteratorHelper(e);try{for(r.s();!(t=r.n()).done;){var n=t.value;n.isIntersecting&&n.target.classList.add("big-project-card")}}catch(e){r.e(e)}finally{r.f()}},socialsIconsAnimation=function(e){var t,r=_createForOfIteratorHelper(e);try{for(r.s();!(t=r.n()).done;){var n=t.value;n.isIntersecting&&n.target.classList.add("show-social-icon")}}catch(e){r.e(e)}finally{r.f()}},aboutTextObserver=new IntersectionObserver(aboutTextAnimation,options),aboutCardsObserver=(aboutTextObserver.observe(aboutTextContainer),new IntersectionObserver(aboutCardsAnimation,options)),projectsCardsObserver=(aboutCardsObserver.observe(aboutCardsContainer),new IntersectionObserver(projectsCardsAnimation,options)),socialsIconsObserver=(projectsCards.forEach(function(e){projectsCardsObserver.observe(e)}),new IntersectionObserver(socialsIconsAnimation,options));socialIcons.forEach(function(e){socialsIconsObserver.observe(e)}),moreInfoButtons.forEach(function(e){e.addEventListener("click",showHiddenText)});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
